// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ------------- //
// button_matrix //
// ------------- //

#define button_matrix_wrap_target 0
#define button_matrix_wrap 18

static const uint16_t button_matrix_program_instructions[] = {
            //     .wrap_target
    0xef01, //  0: set    pins, 1                [15]
    0x4004, //  1: in     pins, 4                    
    0xef02, //  2: set    pins, 2                [15]
    0x4004, //  3: in     pins, 4                    
    0xef04, //  4: set    pins, 4                [15]
    0x4004, //  5: in     pins, 4                    
    0xef08, //  6: set    pins, 8                [15]
    0x4004, //  7: in     pins, 4                    
    0xa026, //  8: mov    x, isr                     
    0x0020, //  9: jmp    !x, 0                      
    0x8000, // 10: push   noblock                    
    0xc020, // 11: irq    wait 0                     
    0xe03f, // 12: set    x, 31                      
    0x004d, // 13: jmp    x--, 13                    
    0xe50f, // 14: set    pins, 15               [5] 
    0xa240, // 15: mov    y, pins                [2] 
    0xac20, // 16: mov    x, pins                [12]
    0x00a0, // 17: jmp    x != y, 0                  
    0x0010, // 18: jmp    16                         
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program button_matrix_program = {
    .instructions = button_matrix_program_instructions,
    .length = 19,
    .origin = -1,
};

static inline pio_sm_config button_matrix_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + button_matrix_wrap_target, offset + button_matrix_wrap);
    return c;
}
#endif

